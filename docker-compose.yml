services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app-${APP_NAME}
    platform: linux/amd64
    ports:
      - '${PORT}:${PORT}'
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?schema=public
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app_network
  db:
    image: postgres:16-alpine
    container_name: db-${APP_NAME}
    platform: linux/amd64
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test:
        [
          'CMD-SHELL',
          "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'",
        ]
      timeout: 10s
      retries: 5
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    networks:
      - app_network
networks:
  app_network:
    driver: bridge
